<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
    <UserSecretsId>cbcf2d46-e1b7-4de7-9ba8-a10d57e44ed4</UserSecretsId>
    <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
    <DockerfileContext>..\..\..</DockerfileContext>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="MediatR" Version="12.2.0" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="8.0.2">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.VisualStudio.Azure.Containers.Tools.Targets" Version="1.19.6" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\Core\EventHubTicket.Management.Application\EventHubTicket.Management.Application.csproj" />
    <ProjectReference Include="..\..\Infrastructure\EventHubTicket.Management.Infrastructure\EventHubTicket.Management.Infrastructure.csproj" />
    <ProjectReference Include="..\..\Infrastructure\EventHubTicket.Management.Persistence\EventHubTicket.Management.Persistence.csproj" />
  </ItemGroup>

  <Target Name="EnsureDbContainerIsAvailableInDebug"
		  BeforeTargets="BeforeBuild;BeforeRebuild"
		  Condition="'$(Configuration)'=='DEBUG' And '$(SkipEnsureDbContainerIsAvailable)' == 'false'">
		
    <Exec WorkingDirectory="../../../dev-utils/"
		  Condition="$([MSBuild]::IsOSPlatform('Linux')) Or $([MSBuild]::IsOSPlatform('OSX')) Or $([MSBuild]::IsOSPlatform('Unix'))"
		  Command="bash docker-ensure-mssql-is-running.sh"/>

    <Exec WorkingDirectory="../../../dev-utils/"
		  Condition="$([MSBuild]::IsOSPlatform('Windows'))"
		  Command="powershell -ExecutionPolicy Bypass -File docker-ensure-mssql-is-running.ps1"/>

  </Target>

</Project>
